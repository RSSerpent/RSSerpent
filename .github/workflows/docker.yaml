name: Build Docker Image

on:
  pull_request:
    paths:
      - '.github/workflows/docker.yaml'
      - 'Dockerfile'
      - 'poetry.lock'
      - 'rsserpent/**'
  push:
    branches:
      - 'master'
    paths:
      - '.github/workflows/docker.yaml'
      - 'Dockerfile'
      - 'poetry.lock'
      - 'rsserpent/**'
    tags:
      - '*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Run Poetry Export"
        run: |
          pip install --upgrade pip
          pip install --user poetry
          poetry export -o requirements.txt --without-hashes
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - name: "Login to Docker Hub"
        if: github.repository == 'RSSerpent/RSSerpent' && github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: queensferry
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: "Login to GitHub Container Registry"
        if: github.repository == 'RSSerpent/RSSerpent' && github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v3
        id: meta
        with:
          images: queensferry/rsserpent,ghcr.io/rsserpent/rsserpent
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - uses: docker/build-push-action@v2
        with:
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,scope=${{ github.workflow }}
          context: .
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64, linux/arm64, linux/ppc64le, linux/s390x, linux/386, linux/mips64le, linux/arm/v7
          push: ${{ github.repository == 'RSSerpent/RSSerpent' && github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
      - uses: bots-house/ghcr-delete-image-action@main
        if: github.repository == 'RSSerpent/RSSerpent' && github.event_name != 'pull_request'
        with:
          owner: rsserpent
          name: rsserpent
          token: ${{ secrets.PAT_TOKEN }}
          untagged-keep-latest: 10
      - uses: peter-evans/dockerhub-description@v2
        if: github.repository == 'RSSerpent/RSSerpent' && github.event_name != 'pull_request'
        with:
          username: queensferry
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: queensferry/rsserpent
          short-description: ${{ github.event.repository.description }}
  test:
    needs: build
    runs-on: ubuntu-latest
    services:
      rsserpent:
        image: ghcr.io/rsserpent/rsserpent:master
        ports:
          - 8000:8000
    steps:
      - name: "Test Docker Image"
        run: |
          # don't remove this line (f**k i wish i know why)
          sleep 10
          curl localhost:8000 | grep "RSSerpent is up & running"
